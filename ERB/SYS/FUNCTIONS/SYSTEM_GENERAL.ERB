;=============================================================================
;캐릭터 변수 증가 범용 처리
;=============================================================================
;-------------------------------------------------
;특별한 주의가 없을 경우의 공통 사항
;-------------------------------------------------
;ARG　……캐릭터 위치
;ARG:1……어느 것이 상승하는지를 지정
;ARG:2……상승량
;ARG:3……표시 형식(0=PRINTFORML, 1=PRINTFORMW, 2=표시하지 않음)
;ARG:4……표시 형식 그 ２(0=조교 대상도 표시함, 1=조교 대상의 표시를 생략함, 2=대상의 표시를 생략함)
;-------------------------------------------------
;보주 상승 범용 처리
;-------------------------------------------------
@COMMON_UP_JUEL, ARG, ARG:1, ARG:2, ARG:3, ARG:4
;빠꾸
SIF ARG:2 <= 0
    RETURN 0

;단순하게 몽땅 떠넘기기
CALL COMMON_MOVE_JUEL, ARG, ARG:1, ARG:2, ARG:3, ARG:4
RETURN RESULT

;-------------------------------------------------
;보주 하강 범용 처리
;-------------------------------------------------
;ARG:2にはどれだけ下げるかを入れる（100個減らすなら100、-100ではない）
@COMMON_DOWN_JUEL, ARG, ARG:1, ARG:2, ARG:3, ARG:4
;빠꾸
SIF ARG:2 <= 0
    RETURN 0

;単純にARG:2の値を反転させて丸投げ
CALL COMMON_MOVE_JUEL, ARG, ARG:1, -ARG:2, ARG:3, ARG:4
RETURN RESULT

;-------------------------------------------------
;보주 변동 범용 처리
;-------------------------------------------------
@COMMON_MOVE_JUEL, ARG, ARG:1, ARG:2, ARG:3, ARG:4
;変動後の珠の数を計算
;-1p63-1は符号付き64ビットの2進数で表すことが出来る最大の数のはず
LOCAL:1 = LIMIT(JUEL:ARG:(ARG:1)+ARG:2, 0, 9223372036854775807)
;変動差分を計算
LOCAL:2 = LOCAL:1-JUEL:ARG:(ARG:1)
;表示する文字列を計算
;ARG:4は0以下、１、2以上で分岐
;SIGN(LOCAL:2) == 1により差分の正負で＋と－を分岐
LOCALS = %PALAMNAME:(ARG:1)%의 구슬\@ ARG:4 - (ARG != TARGET) <= 0 ? (%CALLNAME:ARG%) # \@ \@ SIGN(LOCAL:2) == 1 ? ＋ # － \@ {ABS(LOCAL:2)}
;구슬 변동을 반영
JUEL:ARG:(ARG:1) = LOCAL:1
;変動差分の絶対値が0でないなら表示
IF ABS(LOCAL:2) > 0
    SELECTCASE ARG:3
        ;WAITを掛けない
        CASE 0
            PRINTSL LOCALS
            RETURN 1
        ;WAITを掛ける
        CASE 1
            PRINTSW LOCALS
            RETURN 1
        ;표시하지 않음
        CASEELSE
            RETURN 0
    ENDSELECT
ENDIF

;-------------------------------------------------
;경험 상승 범용 처리
;-------------------------------------------------
@COMMON_UP_EXP, ARG, ARG:1, ARG:2, ARG:3, ARG:4
;値が上昇しないなら戻る
SIF ARG:2 <= 0
    RETURN 0

EXP:ARG:(ARG:1) += ARG:2
IF ARG:4 == 1
    LOCALS = %EXPNAME:(ARG:1)%\@(ARG != TARGET) ? (%CALLNAME:ARG%) # \@ ＋ {ARG:2}
ELSEIF ARG:4 == 2
    LOCALS = %EXPNAME:(ARG:1)% ＋ {ARG:2}
ELSE
    LOCALS = %EXPNAME:(ARG:1)%(%CALLNAME:ARG%) ＋ {ARG:2}
ENDIF
IF ARG:2 > 0 && ARG:3 == 0
    PRINTFORML %LOCALS%
ELSEIF ARG:2 > 0 && ARG:3 == 1
    PRINTFORMW %LOCALS%
ENDIF
;Ｖ経験増加特別処理
IF ARG:1 == 0 && (CFLAG:ARG:11 & 1) == 0
    CFLAG:ARG:11 |= 1
;Ａ経験増加特別処理
ELSEIF ARG:1 == 1 && (CFLAG:ARG:11 & 2) == 0
    CFLAG:ARG:11 |= 2
;異常経験増加特別処理
ELSEIF ARG:1 == 50 && (CFLAG:ARG:11 & 4) == 0
    CFLAG:ARG:11 |= 4
ENDIF
SIF ARG:3 != 2
    RETURN 1

;-------------------------------------------------
;소질 삭제 범용 처리
;-------------------------------------------------
;ARG　……캐릭터 위치
;ARG:1……TALENT번호
;ARG:2……표시 처리용 플래그
@LOST_TALENTS, ARG, ARG:1, ARG:2
IF TALENT:ARG:(ARG:1)
    SIF ARG:2 == 0
        PRINTFORM %조사처리(CALLNAME:ARG,"는")% 
    PRINTFORM [%TALENTNAME:(ARG:1)%]
    TALENT:ARG:(ARG:1) = 0
    RETURN 1
ENDIF
RETURN ARG:2

;-------------------------------------------------
;소질 추가 범용 처리
;-------------------------------------------------
;ARG　……캐릭터 위치
;ARG:1……TALENT번호
;ARG:2……표시 처리용 플래그
@GET_TALENTS, ARG, ARG:1, ARG:2
IF TALENT:ARG:(ARG:1) == 0
    SIF ARG:2 == 1
        PRINT 을(를) 잃고, 
    PRINTFORM [%TALENTNAME:(ARG:1)%]
    TALENT:ARG:(ARG:1) = 1
    RETURN 2
ENDIF
RETURN ARG:2

;--------------------------------------------------
;양자택일 소질의 변동 범용 처리
;--------------------------------------------------
;ARGのTALENT1と2を1/2の確率で排他的選択するだけの処理
;ARG=대상 캐릭터
;ARG:1=TALENT1
;ARG:2=TALENT2
@TALENT_RAND_CHANGE_2, ARG, ARG:1, ARG:2
IF RAND:2 == 1
    TALENT:ARG:(ARG:1) = 1
    TALENT:ARG:(ARG:2) = 0
ELSE
    TALENT:ARG:(ARG:1) = 0
    TALENT:ARG:(ARG:2) = 1
ENDIF

;--------------------------------------------------
;삼자택일 소질의 변동 범용 처리
;--------------------------------------------------
;ARGのTALENT1と2とどっちも付かないを1/3の確率で排他的選択するだけの処理
;ARG=대상 캐릭터
;ARG:1=TALENT1
;ARG:2=TALENT2
@TALENT_RAND_CHANGE_3, ARG, ARG:1, ARG:2
IF RAND:3 == 0
    TALENT:ARG:(ARG:1) = 1
    TALENT:ARG:(ARG:2) = 0
ELSEIF RAND:2 == 0
    TALENT:ARG:(ARG:1) = 0
    TALENT:ARG:(ARG:2) = 1
ELSE
    TALENT:ARG:(ARG:1) = 0
    TALENT:ARG:(ARG:2) = 0
ENDIF

;-------------------------------------------------
;CFLAG 증감 범용 처리(호감도라거나)
;-------------------------------------------------
@COMMON_MOVE_CFLAG, ARG, ARG:1, ARG:2, ARG:3, ARG:4
;変動差分を計算
LOCAL = MAX(CFLAG:ARG:(ARG:1)+ARG:2, 0)-CFLAG:ARG:(ARG:1)
;表示する文字列を計算
;ARG:4は0以下、１、2以上で分岐
;SIGN(LOCAL) == 1により差分の正負で＋と－を分岐
LOCALS = %CFLAGNAME:(ARG:1)%\@ ARG:4 - (ARG != TARGET) <= 0 ? (%CALLNAME:ARG%) # \@ \@ SIGN(LOCAL) == 1 ? ＋ # － \@ {ABS(LOCAL)}
;フラグ変動を反映
CFLAG:ARG:(ARG:1) += LOCAL
;変動差分が0でないなら表示
IF LOCAL != 0
    SELECTCASE ARG:3
        ;WAITを掛けない
        CASE 0
            PRINTSL LOCALS
            RETURN 1
        ;WAITを掛ける
        CASE 1
            PRINTSW LOCALS
            RETURN 1
        ;표시하지 않음
        CASEELSE
            RETURN 0
    ENDSELECT
ENDIF

;-------------------------------------------------
;BASE값 증감 범용 처리(증감 표시 없음)
;-------------------------------------------------
@ADD_BASE(ARG, ARG:1, ARG:2)
BASE:ARG:(ARG:1) = LIMIT(BASE:ARG:(ARG:1)+ARG:2, 0, MAXBASE:ARG:(ARG:1))

;-------------------------------------------------
;MARK값 상승 범용 처리(단, MARK:고통각인～MARK:불사각인만이 대상)
;-------------------------------------------------
;ARG=대상 캐릭터
;ARG:1=대상 각인
;ARG:2=상승 후의 대상 각인의 값
;ARG:3=표시 형식(0=PRINTFORML, 1=PRINTFORMW, 2=표시하지 않음)
@COMMON_MARK_UP, ARG, ARG:1, ARG:2, ARG:3
;処理しないで戻す場合(存在しない刻印は上昇しない)
SIF ARG:1 < 0 || ARG:1 > 10
    RETURN 0
SIF STRLENS(MARKNAME:(ARG:1)) <= 0
    RETURN 0
;現在の刻印の数値が上昇後の値以上なら以降の処理をしない
SIF MARK:ARG:(ARG:1) >= ARG:2
    RETURN 0
;刻印上昇処理
MARK:ARG:(ARG:1) = ARG:2
;恐怖刻印および反発刻印上昇時は刻印履歴も更新する
IF ARG:1 == 8
    MARK:ARG:96 = MAX(MARK:ARG:공포각인 , ARG:2)
ELSEIF ARG:1 == 9
    MARK:ARG:97 = MAX(MARK:ARG:반발각인 , ARG:2)
ENDIF
SELECTCASE ARG:3
    ;WAITを掛けない
    CASE 0
        PRINTFORM %조사처리(CALLNAME:ARG,"는")% 
        FONTBOLD
        CALL SETCOLOR_TORIKOMODE, "RED", 4
        PRINTFORM %MARKNAME:(ARG:1)% LV%조사처리(TOSTR(MARK:ARG:(ARG:1)),"를")% 
        FONTREGULAR
        RESETCOLOR
        PRINTL  취득했다.
        RETURN 1
    ;WAITを掛ける
    CASE 1
        PRINTFORM %조사처리(CALLNAME:ARG,"는")% 
        FONTBOLD
        CALL SETCOLOR_TORIKOMODE, "SKYBLUE", 4
        PRINTFORM %MARKNAME:(ARG:1)% LV%조사처리(TOSTR(MARK:ARG:(ARG:1)),"를")% 
        RESETCOLOR
        FONTREGULAR
        PRINTW  취득했다.
        RETURN 1
    ;표시하지 않음
    CASEELSE
        RETURN 0
ENDSELECT


;=============================================================================
;각종 범용 판정 처리
;=============================================================================
;-------------------------------------------------
;キャラIDのキャラを登録キャラから探す関数
;-------------------------------------------------
;いたらそのキャラの登録キャラ번호を返す、いなければ-1を返す
;ARG:0……探すべきキャラのID
;ARG:1……0 = 全員から探す, 1 = 主人は除く
@SEARCH_CHARA_ID(ARG:0, ARG:1)
#FUNCTION
LOCAL = -1
FOR LOCAL:1, 0, CHARANUM
    SIF ARG:1 == 1 && LOCAL:1 == MASTER
        CONTINUE

    IF CFLAG:(LOCAL:1):3109 == ARG:0
        LOCAL = LOCAL:1
        BREAK
    ENDIF
NEXT
RETURNF LOCAL

;-------------------------------------------------
;主人か助手可能キャラに禁断もしくは調合知識があるか探す関数
;-------------------------------------------------
;禁断の知識持ちがいればBit1を立てる、調合知識持ちがいればBit2を立てる.
@SEARCH_CHARA_WISDOM
#FUNCTION
LOCAL = 0
FOR LOCAL:1, 0, CHARANUM
    ;その場にいないとだめ
    SIF CFLAG:(LOCAL:1):4
        CONTINUE
    ;主人か助手可能でないとだめ
    SIF LOCAL:1 != MASTER && CFLAG:(LOCAL:1):1 < 2
        CONTINUE
    
    ;調合知識持ち
    SIF TALENT:(LOCAL:1):조합지식
        LOCAL |= 1
    ;禁断の知識持ち
    SIF TALENT:(LOCAL:1):금단의지식
        LOCAL |= 2
NEXT
RETURNF LOCAL

;-----------------------------------------
;[使い魔]条件を満たしているかを調べる関数
;-----------------------------------------
;既に[使い魔]持ちor主人に関してはこれは使わないように.
;ARG:0……探すべきキャラの登録キャラ번호
@FAMILIAR_ABLE(ARG)
#FUNCTION
;親愛または妄信が必要
SIF TALENT:ARG:망신 == 0 && TALENT:ARG:친애 == 0
    RETURNF 0
;従順、欲望の合計が8以上
SIF ABL:ARG:순종 + ABL:ARG:욕망 < 8
    RETURNF 0
;技巧、奉仕精神がそれぞれ4以上
SIF ABL:ARG:기교 < 4 || ABL:ARG:봉사정신 < 4
    RETURNF 0
;マゾっ気、自慰中毒がそれぞれ2以上
SIF ABL:ARG:마조끼 < 2 || ABL:ARG:자위중독 < 2
    RETURNF 0
;料理技能が3以上または歌唱技能が3以上または精液中毒が4以上
SIF ABL:ARG:요리기능 < 3 && ABL:ARG:가창기능 < 3 && ABL:ARG:정액중독 < 4
    RETURNF 0
;強制自慰経験が50以上かつ奉仕快楽経験が500以上
SIF EXP:ARG:조교자위경험 < 50 || EXP:ARG:봉사쾌락경험 < 500
    RETURNF 0
;屈服刻印Lv3かつ反発刻印Lv0
SIF MARK:ARG:굴복각인 < 3 || MARK:ARG:반발각인
    RETURNF 0
;好感度が500必要
SIF CFLAG:ARG:2 < 500
    RETURNF 0
;主人が[大甲斐性]を持っていないとき
IF TALENT:MASTER:대범함 == 0
    ;男主人の場合
    IF TALENT:MASTER:남자
        ;相手が女ならレズ経験1500未満
        SIF EXP:ARG:레즈경험 >= 1500 && TALENT:ARG:남자 == 0
            RETURNF 0
        ;相手が男ならＢＬ経験1500以上
        SIF EXP:ARG:BL경험 < 1500 && TALENT:ARG:남자
            RETURNF 0
    ;女主人の場合
    ELSE
        ;相手が女ならレズ経験が1500以上
        SIF EXP:ARG:레즈경험 < 1500 && TALENT:ARG:남자 == 0
            RETURNF 0
        ;相手が男ならＢＬ経験1500未満
        SIF EXP:ARG:BL경험 >= 1500 && TALENT:ARG:남자
            RETURNF 0
    ENDIF
ENDIF
RETURNF 1

;=============================================================================
;캐릭터 추가시의 공통 처리
;=============================================================================
;ARG에 추가하고 싶은 캐릭터 번호를 입력
@CHARA_STATE_BASIC, ARG
ADDCHARA ARG
TARGET = CHARANUM-1
;범용 캐릭터의 경우에는 랜덤 소질 부가 처리로 놀아간다
IF ARG >= 150 && ARG < 200
    CALL CHARA_RANDOM_STATE
ELSE
    ;무명 캐릭터 외에는 캐릭터 카드를 취득
    ITEM:(ARG+100) += 1
ENDIF
;캐릭터 ID 설정
CFLAG:3109 = FLAG:998
FLAG:998 += 1
;사정 게이지 설정
SIF (TALENT:120 || TALENT:121) && MAXBASE:사정 <= 0
    MAXBASE:사정 = CALC_GAUGE2_COMMON(TARGET)
;분유 게이지 설정
SIF TALENT:134
    CALL CALC_GAUGE3_SLAVE, TARGET, 1
;뇨의 게이지 설정
SIF TALENT:오줌싸개버릇 || EXP:방뇨경험
    CALL CALC_GAUGE4_SLAVE, TARGET, 1
;촉수 게이지 설정
SIF TALENT:146
    CALL CALC_TENTACLE_GAUGE
;취기 게이지 설정
CALL CALC_GAUGE8, TARGET, 0
;사용할 대사의 선택
;CALL SELECT_TEXT_DISPLAY, TARGET

;토리코모드용, 만복도와 영양도 설정.
CALL SET_DEAFAULT_HUNGER_TORIKOMODE , TARGET
CALL SET_DEAFAULT_NUTRITION_TORIKOMODE , TARGET
CALL SET_DEAFAULT_MENU_TORIKOMODE , TARGET
CALL SET_DEAFAULT_STARVE_TORIKOMODE , TARGET

;=============================================================================
;사용할 대사의 선택 처리
;=============================================================================
@SELECT_TEXT_DISPLAY, ARG
#LOCALSIZE 1
;대사의 존재 판정
TRYCCALLFORM TRY_{NO:ARG}
    TRYCCALLFORM KOJO_{NO:ARG}_DISPLAY_SETTINGS
        LOCAL = (RESULT >= 1 && RESULT <= 3) ? RESULT # 0
    CATCH
        LOCAL = 1
    ENDCATCH
CATCH
    LOCAL = 0
ENDCATCH
DRAWLINE
PRINTFORML %CALLNAME:ARG%에게 사용할 대사를 선택해주세요(※나중에 변경할 수는 없습니다)
DRAWLINE
PRINTLC [0] 사용하지 않는다
PRINTLC [1] 지문만
PRINTLC [2] 범용 대사만
PRINTLC [3] 범용 대사＋지문
SIF LOCAL == 1 || LOCAL == 2
    PRINTLC [4] 전용 대사만
SIF LOCAL == 1 || LOCAL == 3
    PRINTLC [5] 전용 대사＋지문
PRINTL 
$INPUT_LOOP
INPUT
IF RESULT == 0
    PRINTFORMW %CALLNAME:ARG%에게 대사 · 지문은 사용하지 않도록 설정했습니다.
    ;대사 표시의 개별 설정 플래그에 기억
    CFLAG:ARG:9 = 1
ELSEIF RESULT == 1
    PRINTFORMW %CALLNAME:ARG%에게 지문을 사용하도록 설정했습니다
    ;대사 표시의 개별 설정 플래그에 기억
    CFLAG:ARG:9 = 2
ELSEIF RESULT == 2
    PRINTFORMW %CALLNAME:ARG%에게 범용 대사를 사용하도록 설정했습니다
    ;대사 표시의 개별 설정 플래그에 기억
    CFLAG:ARG:9 = 4
    ;「인격 설정」
    CALL DEFINE_JINKAKU_SELECT, ARG
ELSEIF RESULT == 3
    PRINTFORMW %CALLNAME:ARG%에게 범용 대사와 지문을 사용하도록 설정했습니다
    ;대사 표시의 개별 설정 플래그에 기억
    CFLAG:ARG:9 = 6
    ;「인격 설정」
    CALL DEFINE_JINKAKU_SELECT, ARG
ELSEIF RESULT == 4 && (LOCAL == 1 || LOCAL == 2)
    PRINTFORMW %CALLNAME:ARG%에게 전용 대사를 사용하도록 설정했습니다
    ;대사 표시의 개별 설정 플래그에 기억
    CFLAG:ARG:9 = 8
ELSEIF RESULT == 5 && (LOCAL == 1 || LOCAL == 3)
    PRINTFORMW %CALLNAME:ARG%에게 전용 대사와 지문을 사용하도록 설정했습니다
    ;대사 표시의 개별 설정 플래그에 기억
    CFLAG:ARG:9 = 10
ELSE
    GOTO INPUT_LOOP
ENDIF

;=============================================================================
;테이블 계산 범용 처리
;=============================================================================
;-------------------------------------------------
;테이블 계산 그 １
;-------------------------------------------------
;테이블 계산용
;ARG:0 = 代入すべき変数(以下元変数)より引き渡された数
;ARG:1 ・ ARG:2 = 元変数がARG:2より大きいならばARG:1を引いてARG:2を割る
@TABLE_CALC(ARG, ARG:1, ARG:2)
#FUNCTION
LOCAL = ARG
SIF LOCAL > ARG:1
    LOCAL = ARG:1 + (LOCAL - ARG:1) / ARG:2

RETURNF LOCAL

;-------------------------------------------------
;테이블 계산 그 ２
;-------------------------------------------------
;테이블 계산용
;ARG:0 = 代入すべき変数(以下元変数)より引き渡された数
;ARG:1 ・ ARG:2 = 元変数がARG:2より大きいならばARG:1を引いそれに、ARG:2の100分の1の値を掛ける
@TABLE_CALC2(ARG, ARG:1, ARG:2)
#FUNCTION
LOCAL = ARG
SIF LOCAL > ARG:1
    LOCAL = ARG:1 + (LOCAL - ARG:1) * ARG:2 / 100

RETURNF LOCAL

;=============================================================================
;각종 범용 표시 처리
;=============================================================================
;-------------------------------------------------
;만원 표시
;-------------------------------------------------
@SHOW_YEN(ARG)
#FUNCTIONS
LOCALS = \@(ARG >= 10000) ? {ARG/10000}만 # \@\@(ARG%10000 > 0) ? {ARG%10000} # \@원
RETURNF LOCALS
